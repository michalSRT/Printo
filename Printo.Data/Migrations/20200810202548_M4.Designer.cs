// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Printo.Data.Data;

namespace Printo.Data.Migrations
{
    [DbContext(typeof(PrintoContext))]
    [Migration("20200810202548_M4")]
    partial class M4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Printo.Data.Data.Client", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AddedUserID")
                        .HasColumnType("int");

                    b.Property<string>("AppartmentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NIP")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserID")
                        .HasColumnType("int");

                    b.HasKey("ClientID");

                    b.HasIndex("AddedUserID");

                    b.HasIndex("UpdatedUserID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Printo.Data.Data.DeliveryAdress", b =>
                {
                    b.Property<int>("DeliveryAdressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddedUserID")
                        .HasColumnType("int");

                    b.Property<string>("AppartmentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedUserID")
                        .HasColumnType("int");

                    b.HasKey("DeliveryAdressID");

                    b.HasIndex("AddedUserID");

                    b.HasIndex("ClientID");

                    b.HasIndex("UpdatedUserID");

                    b.ToTable("DeliveryAdresses");
                });

            modelBuilder.Entity("Printo.Data.Data.DeliveryType", b =>
                {
                    b.Property<int>("DeliveryTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AddedUserID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserID")
                        .HasColumnType("int");

                    b.HasKey("DeliveryTypeID");

                    b.HasIndex("AddedUserID");

                    b.HasIndex("UpdatedUserID");

                    b.ToTable("DeliveryTypes");
                });

            modelBuilder.Entity("Printo.Data.Data.Finishing", b =>
                {
                    b.Property<int>("FinishingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AddedUserID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserID")
                        .HasColumnType("int");

                    b.HasKey("FinishingID");

                    b.HasIndex("AddedUserID");

                    b.HasIndex("UpdatedUserID");

                    b.ToTable("Finishings");
                });

            modelBuilder.Entity("Printo.Data.Data.Format", b =>
                {
                    b.Property<int>("FormatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AddedUserID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserID")
                        .HasColumnType("int");

                    b.HasKey("FormatID");

                    b.HasIndex("AddedUserID");

                    b.HasIndex("UpdatedUserID");

                    b.ToTable("Formats");
                });

            modelBuilder.Entity("Printo.Data.Data.Machine", b =>
                {
                    b.Property<int>("MachineID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AddedUserID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserID")
                        .HasColumnType("int");

                    b.HasKey("MachineID");

                    b.HasIndex("AddedUserID");

                    b.HasIndex("UpdatedUserID");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("Printo.Data.Data.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AddedUserID")
                        .HasColumnType("int");

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DeliveryAdressID")
                        .HasColumnType("int");

                    b.Property<int?>("DeliveryTypeID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FinishingID")
                        .HasColumnType("int");

                    b.Property<int>("FormatID")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReprint")
                        .HasColumnType("bit");

                    b.Property<int?>("MachineID")
                        .HasColumnType("int");

                    b.Property<string>("NetPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaperTypeID")
                        .HasColumnType("int");

                    b.Property<int>("PaperWeightID")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("PostPressID")
                        .HasColumnType("int");

                    b.Property<int>("PrintColorID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int?>("ProductionStageID")
                        .HasColumnType("int");

                    b.Property<string>("ReprintDateAndInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SheetSizeID")
                        .HasColumnType("int");

                    b.Property<string>("SheetsNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SheetsNumberPrinted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserID")
                        .HasColumnType("int");

                    b.Property<int?>("VatRateID")
                        .HasColumnType("int");

                    b.HasKey("OrderID");

                    b.HasIndex("AddedUserID");

                    b.HasIndex("ClientID");

                    b.HasIndex("DeliveryAdressID");

                    b.HasIndex("DeliveryTypeID");

                    b.HasIndex("FinishingID");

                    b.HasIndex("FormatID");

                    b.HasIndex("MachineID");

                    b.HasIndex("PaperTypeID");

                    b.HasIndex("PaperWeightID");

                    b.HasIndex("PaymentTypeID");

                    b.HasIndex("PostPressID");

                    b.HasIndex("PrintColorID");

                    b.HasIndex("ProductID");

                    b.HasIndex("ProductionStageID");

                    b.HasIndex("SheetSizeID");

                    b.HasIndex("UpdatedUserID");

                    b.HasIndex("VatRateID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Printo.Data.Data.PaperType", b =>
                {
                    b.Property<int>("PaperTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AddedUserID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserID")
                        .HasColumnType("int");

                    b.HasKey("PaperTypeID");

                    b.HasIndex("AddedUserID");

                    b.HasIndex("UpdatedUserID");

                    b.ToTable("PaperTypes");
                });

            modelBuilder.Entity("Printo.Data.Data.PaperWeight", b =>
                {
                    b.Property<int>("PaperWeightID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AddedUserID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grammature")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserID")
                        .HasColumnType("int");

                    b.HasKey("PaperWeightID");

                    b.HasIndex("AddedUserID");

                    b.HasIndex("UpdatedUserID");

                    b.ToTable("PaperWeights");
                });

            modelBuilder.Entity("Printo.Data.Data.PaymentType", b =>
                {
                    b.Property<int>("PaymentTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AddedUserID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserID")
                        .HasColumnType("int");

                    b.HasKey("PaymentTypeID");

                    b.HasIndex("AddedUserID");

                    b.HasIndex("UpdatedUserID");

                    b.ToTable("PaymentTypes");
                });

            modelBuilder.Entity("Printo.Data.Data.PostPress", b =>
                {
                    b.Property<int>("PostPressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AddedUserID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserID")
                        .HasColumnType("int");

                    b.HasKey("PostPressID");

                    b.HasIndex("AddedUserID");

                    b.HasIndex("UpdatedUserID");

                    b.ToTable("PostPresses");
                });

            modelBuilder.Entity("Printo.Data.Data.PrintColor", b =>
                {
                    b.Property<int>("ColorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AddedUserID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserID")
                        .HasColumnType("int");

                    b.HasKey("ColorID");

                    b.HasIndex("AddedUserID");

                    b.HasIndex("UpdatedUserID");

                    b.ToTable("PrintColors");
                });

            modelBuilder.Entity("Printo.Data.Data.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AddedUserID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserID")
                        .HasColumnType("int");

                    b.HasKey("ProductID");

                    b.HasIndex("AddedUserID");

                    b.HasIndex("UpdatedUserID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Printo.Data.Data.ProductionStage", b =>
                {
                    b.Property<int>("ProductionStageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AddedUserID")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserID")
                        .HasColumnType("int");

                    b.HasKey("ProductionStageID");

                    b.HasIndex("AddedUserID");

                    b.HasIndex("UpdatedUserID");

                    b.ToTable("ProductionStages");
                });

            modelBuilder.Entity("Printo.Data.Data.SheetSize", b =>
                {
                    b.Property<int>("SheetSizeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AddedUserID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserID")
                        .HasColumnType("int");

                    b.HasKey("SheetSizeID");

                    b.HasIndex("AddedUserID");

                    b.HasIndex("UpdatedUserID");

                    b.ToTable("SheetSizes");
                });

            modelBuilder.Entity("Printo.Data.Data.ToDo", b =>
                {
                    b.Property<int>("ToDoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AddedUserID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserID")
                        .HasColumnType("int");

                    b.HasKey("ToDoID");

                    b.HasIndex("AddedUserID");

                    b.HasIndex("UpdatedUserID");

                    b.ToTable("ToDos");
                });

            modelBuilder.Entity("Printo.Data.Data.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserTypeID")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.HasIndex("UserTypeID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Printo.Data.Data.UserType", b =>
                {
                    b.Property<int>("UserTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserTypeID");

                    b.ToTable("UserTypes");

                    b.HasData(
                        new
                        {
                            UserTypeID = 1,
                            AddedDate = new DateTime(2020, 8, 10, 22, 25, 48, 447, DateTimeKind.Local).AddTicks(6047),
                            Description = "Administrator systemu",
                            IsActive = true,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("Printo.Data.Data.VatRate", b =>
                {
                    b.Property<int>("VatRateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AddedUserID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserID")
                        .HasColumnType("int");

                    b.HasKey("VatRateID");

                    b.HasIndex("AddedUserID");

                    b.HasIndex("UpdatedUserID");

                    b.ToTable("VatRates");

                    b.HasData(
                        new
                        {
                            VatRateID = 1,
                            AddedDate = new DateTime(2020, 8, 10, 22, 25, 48, 451, DateTimeKind.Local).AddTicks(2079),
                            Description = "Standardowa stawka Vat",
                            IsActive = true,
                            Name = "23%",
                            Rate = 23
                        },
                        new
                        {
                            VatRateID = 2,
                            AddedDate = new DateTime(2020, 8, 10, 22, 25, 48, 451, DateTimeKind.Local).AddTicks(2594),
                            Description = "Stawka Vat przy numerze ISSN",
                            IsActive = true,
                            Name = "8%",
                            Rate = 8
                        },
                        new
                        {
                            VatRateID = 3,
                            AddedDate = new DateTime(2020, 8, 10, 22, 25, 48, 451, DateTimeKind.Local).AddTicks(2616),
                            Description = "Stawka Vat przy numerze ISBN",
                            IsActive = true,
                            Name = "5%",
                            Rate = 5
                        },
                        new
                        {
                            VatRateID = 5,
                            AddedDate = new DateTime(2020, 8, 10, 22, 25, 48, 451, DateTimeKind.Local).AddTicks(2620),
                            Description = "Nie dotyczy",
                            IsActive = true,
                            Name = "nd",
                            Rate = 0
                        });
                });

            modelBuilder.Entity("Printo.Data.Data.Client", b =>
                {
                    b.HasOne("Printo.Data.Data.User", "AddedUser")
                        .WithMany()
                        .HasForeignKey("AddedUserID");

                    b.HasOne("Printo.Data.Data.User", "UpdatedUser")
                        .WithMany()
                        .HasForeignKey("UpdatedUserID");
                });

            modelBuilder.Entity("Printo.Data.Data.DeliveryAdress", b =>
                {
                    b.HasOne("Printo.Data.Data.User", "AddedUser")
                        .WithMany()
                        .HasForeignKey("AddedUserID");

                    b.HasOne("Printo.Data.Data.Client", "Client")
                        .WithMany("DeliveryAdresses")
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Printo.Data.Data.User", "UpdatedUser")
                        .WithMany()
                        .HasForeignKey("UpdatedUserID");
                });

            modelBuilder.Entity("Printo.Data.Data.DeliveryType", b =>
                {
                    b.HasOne("Printo.Data.Data.User", "AddedUser")
                        .WithMany()
                        .HasForeignKey("AddedUserID");

                    b.HasOne("Printo.Data.Data.User", "UpdatedUser")
                        .WithMany()
                        .HasForeignKey("UpdatedUserID");
                });

            modelBuilder.Entity("Printo.Data.Data.Finishing", b =>
                {
                    b.HasOne("Printo.Data.Data.User", "AddedUser")
                        .WithMany()
                        .HasForeignKey("AddedUserID");

                    b.HasOne("Printo.Data.Data.User", "UpdatedUser")
                        .WithMany()
                        .HasForeignKey("UpdatedUserID");
                });

            modelBuilder.Entity("Printo.Data.Data.Format", b =>
                {
                    b.HasOne("Printo.Data.Data.User", "AddedUser")
                        .WithMany()
                        .HasForeignKey("AddedUserID");

                    b.HasOne("Printo.Data.Data.User", "UpdatedUser")
                        .WithMany()
                        .HasForeignKey("UpdatedUserID");
                });

            modelBuilder.Entity("Printo.Data.Data.Machine", b =>
                {
                    b.HasOne("Printo.Data.Data.User", "AddedUser")
                        .WithMany()
                        .HasForeignKey("AddedUserID");

                    b.HasOne("Printo.Data.Data.User", "UpdatedUser")
                        .WithMany()
                        .HasForeignKey("UpdatedUserID");
                });

            modelBuilder.Entity("Printo.Data.Data.Order", b =>
                {
                    b.HasOne("Printo.Data.Data.User", "AddedUser")
                        .WithMany()
                        .HasForeignKey("AddedUserID");

                    b.HasOne("Printo.Data.Data.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Printo.Data.Data.DeliveryAdress", "DeliveryAdress")
                        .WithMany()
                        .HasForeignKey("DeliveryAdressID");

                    b.HasOne("Printo.Data.Data.DeliveryType", "DeliveryType")
                        .WithMany()
                        .HasForeignKey("DeliveryTypeID");

                    b.HasOne("Printo.Data.Data.Finishing", "Finishing")
                        .WithMany()
                        .HasForeignKey("FinishingID");

                    b.HasOne("Printo.Data.Data.Format", "Format")
                        .WithMany()
                        .HasForeignKey("FormatID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Printo.Data.Data.Machine", "Machine")
                        .WithMany()
                        .HasForeignKey("MachineID");

                    b.HasOne("Printo.Data.Data.PaperType", "PaperType")
                        .WithMany()
                        .HasForeignKey("PaperTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Printo.Data.Data.PaperWeight", "PaperWeight")
                        .WithMany()
                        .HasForeignKey("PaperWeightID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Printo.Data.Data.PaymentType", "PaymentType")
                        .WithMany()
                        .HasForeignKey("PaymentTypeID");

                    b.HasOne("Printo.Data.Data.PostPress", "PostPress")
                        .WithMany()
                        .HasForeignKey("PostPressID");

                    b.HasOne("Printo.Data.Data.PrintColor", "PrintColor")
                        .WithMany()
                        .HasForeignKey("PrintColorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Printo.Data.Data.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Printo.Data.Data.ProductionStage", "ProductionStage")
                        .WithMany()
                        .HasForeignKey("ProductionStageID");

                    b.HasOne("Printo.Data.Data.SheetSize", "SheetSize")
                        .WithMany()
                        .HasForeignKey("SheetSizeID");

                    b.HasOne("Printo.Data.Data.User", "UpdatedUser")
                        .WithMany()
                        .HasForeignKey("UpdatedUserID");

                    b.HasOne("Printo.Data.Data.VatRate", "VatRate")
                        .WithMany()
                        .HasForeignKey("VatRateID");
                });

            modelBuilder.Entity("Printo.Data.Data.PaperType", b =>
                {
                    b.HasOne("Printo.Data.Data.User", "AddedUser")
                        .WithMany()
                        .HasForeignKey("AddedUserID");

                    b.HasOne("Printo.Data.Data.User", "UpdatedUser")
                        .WithMany()
                        .HasForeignKey("UpdatedUserID");
                });

            modelBuilder.Entity("Printo.Data.Data.PaperWeight", b =>
                {
                    b.HasOne("Printo.Data.Data.User", "AddedUser")
                        .WithMany()
                        .HasForeignKey("AddedUserID");

                    b.HasOne("Printo.Data.Data.User", "UpdatedUser")
                        .WithMany()
                        .HasForeignKey("UpdatedUserID");
                });

            modelBuilder.Entity("Printo.Data.Data.PaymentType", b =>
                {
                    b.HasOne("Printo.Data.Data.User", "AddedUser")
                        .WithMany()
                        .HasForeignKey("AddedUserID");

                    b.HasOne("Printo.Data.Data.User", "UpdatedUser")
                        .WithMany()
                        .HasForeignKey("UpdatedUserID");
                });

            modelBuilder.Entity("Printo.Data.Data.PostPress", b =>
                {
                    b.HasOne("Printo.Data.Data.User", "AddedUser")
                        .WithMany()
                        .HasForeignKey("AddedUserID");

                    b.HasOne("Printo.Data.Data.User", "UpdatedUser")
                        .WithMany()
                        .HasForeignKey("UpdatedUserID");
                });

            modelBuilder.Entity("Printo.Data.Data.PrintColor", b =>
                {
                    b.HasOne("Printo.Data.Data.User", "AddedUser")
                        .WithMany()
                        .HasForeignKey("AddedUserID");

                    b.HasOne("Printo.Data.Data.User", "UpdatedUser")
                        .WithMany()
                        .HasForeignKey("UpdatedUserID");
                });

            modelBuilder.Entity("Printo.Data.Data.Product", b =>
                {
                    b.HasOne("Printo.Data.Data.User", "AddedUser")
                        .WithMany()
                        .HasForeignKey("AddedUserID");

                    b.HasOne("Printo.Data.Data.User", "UpdatedUser")
                        .WithMany()
                        .HasForeignKey("UpdatedUserID");
                });

            modelBuilder.Entity("Printo.Data.Data.ProductionStage", b =>
                {
                    b.HasOne("Printo.Data.Data.User", "AddedUser")
                        .WithMany()
                        .HasForeignKey("AddedUserID");

                    b.HasOne("Printo.Data.Data.User", "UpdatedUser")
                        .WithMany()
                        .HasForeignKey("UpdatedUserID");
                });

            modelBuilder.Entity("Printo.Data.Data.SheetSize", b =>
                {
                    b.HasOne("Printo.Data.Data.User", "AddedUser")
                        .WithMany()
                        .HasForeignKey("AddedUserID");

                    b.HasOne("Printo.Data.Data.User", "UpdatedUser")
                        .WithMany()
                        .HasForeignKey("UpdatedUserID");
                });

            modelBuilder.Entity("Printo.Data.Data.ToDo", b =>
                {
                    b.HasOne("Printo.Data.Data.User", "AddedUser")
                        .WithMany()
                        .HasForeignKey("AddedUserID");

                    b.HasOne("Printo.Data.Data.User", "UpdatedUser")
                        .WithMany()
                        .HasForeignKey("UpdatedUserID");
                });

            modelBuilder.Entity("Printo.Data.Data.User", b =>
                {
                    b.HasOne("Printo.Data.Data.UserType", "UserType")
                        .WithMany("Users")
                        .HasForeignKey("UserTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Printo.Data.Data.VatRate", b =>
                {
                    b.HasOne("Printo.Data.Data.User", "AddedUser")
                        .WithMany()
                        .HasForeignKey("AddedUserID");

                    b.HasOne("Printo.Data.Data.User", "UpdatedUser")
                        .WithMany()
                        .HasForeignKey("UpdatedUserID");
                });
#pragma warning restore 612, 618
        }
    }
}
